openapi: 3.0.1

info:
    title: Online shopping cart
    description:  From this shopping cart app, users can select products, add those products to the cart, remove products and update the cart. And also users can checkout those product.
    version: 1.0.0

servers:
    - url: 'http://localhost:3001/api'
      description: Shopping cart is listening to requests on port 3001

# security:
#   - bearerAuth: []

# components:
#   securitySchemes:

#     bearerAuth:
#         type: http
#         scheme: bearer
#         bearerFormat: JWT
paths: 
  /product/products:
          get:
            # security:
            #   - bearerAuth: []
            summary: Shows all products to the user.
            description: User can view all the products, details with product name, image, descriptio, price and stock. If there occurrs an error in server side user can view the error message like Internal server error. 

            responses:
                '200':
                    description: A JSON object of id, productName, productImage, description, price and stock.
                    content:
                        application/json:
                            schema: 
                                type: array
                                example: [
                                  {
                                    "id": 1,
                                    "productName": "Moose Tshirt",
                                    "productImage": "moose.jpg",
                                    "description": "S,M, L, XL sizes are available",
                                    "price": "990",
                                    "stock": 1000
                                  },
                                  {
                                    "id": 2,
                                    "productName": "Jump Suit",
                                    "productImage": "jump-suit.jpg",
                                    "description": "S,M, L, XL sizes are available",
                                    "price": "2200",
                                    "stock": 1230
                                  }
                                ]
                                properties:
                                  id: 
                                    type: number
                                    example: 1
                                  productName:
                                    type: string
                                    example: "Moose Tshirt"
                                  productImage: 
                                    type: string
                                    example: image.jpg
                                  description: 
                                    type: string
                                    example: "S, M, L, XL sizes are available"
                                  price:
                                    type: number
                                    example: 990.00
                                  stock: 
                                    type: number
                                    example: 1000

                '500':
                  description: "Shows the Internal server error message when there is an error in server side"

  /product/getProductById/{productId}:
        get:
          summary: show a product for given productId
          description: User can view a product, details with id, productName, productImage, description, price and stock for given productId.
          parameters:
              - name: productId
                in: path
                required: true
                schema: 
                  type: number

          responses:
            '200':
              description: A JSON object of id, productName, productImage, description, price and stock for given productId.
              content:
                        application/json:
                            schema: 
                                type: object
                                example: 
                                  {
                                    "message": "Success",
                                    "data": {
                                      "productId": 1,
                                      "productName": "Moose Tshirt",
                                      "productImage": "moose.jpg",
                                      "description": "S,M, L, XL sizes are available",
                                      "price": "990",
                                      "stock": 1000,
                                    }
                                  }
                                properties:
                                  message:
                                    type: string
                                    example: "Success"
                                  data:
                                    type: object
                                    properties:
                                      id: 
                                        type: number
                                        example: 1
                                      productName:
                                        type: string
                                        example: "Moose Tshirt"
                                      productImage: 
                                        type: string
                                        example: image.jpg
                                      description: 
                                        type: string
                                        example: "S, M, L, XL sizes are available"
                                      price:
                                        type: number
                                        example: 990.00
                                      stock: 
                                        type: number
                                        example: 1000

            '404':
              description: "Shows the Product not found error message when the product is not in the database for given productId"
            '500':
              description: "Shows the Internal server error message when there is an error in server side"

  /cart/add-to-cart:
    post: 
      summary: add a product to the cart for given productId
      description: User can add a product to the cart for given productId
      requestBody:
                required: true
                content: 
                    application/json:
                        schema:
                            type: object
                            properties:
                              cartId:
                                type: number
                                example: 6
                              productId:
                                type: number
                                example: 3
                              quantity: 
                                type: number
                                example: 2
      responses:
        '200':
          description: A json object with Item added successfully message and data object with cartId, productId and quantity
          content:
            application/json:
              schema:
                type: object
                example: {
                  "message": "Item added successfully",
                  "data": {
                    "cartId": 6,
                    "productId": 2,
                    "quantity": 2
                  }
                }
                properties: 
                  message: 
                    type: string
                    example: Item added successfully
                  data:
                    type: object
                    properties:
                      cartId:
                        type: number
                        example: 6
                      productId:
                        type: number
                        example: 3
                      quantity: 
                        type: number
                        example: 2

        '500':
          description: "Shows the Internal server error message when there is an error in server side"

  /cart/view-cart/{cartId}:
    get:
      summary: view the cart for given cartId
      description: User can view the cart with added cart items for given cartId
      parameters:
              - name: cartId
                in: path
                required: true
                schema: 
                  type: number

      responses:
            '200':
              description: A JSON object of message and data object with cart_item_cartId, cart_item_productId, cart_item_quantity, product_productName, product_productImage, product_price.
              content:
                        application/json:
                            schema: 
                                type: object
                                example: 
                                  {
                                    "message": "Successfully view the cart",
                                    "data": 
                                    {
                                      "cart_item_cartId": 6,
                                      "cart_item_productId": 1,
                                      "cart_item_quantity": 2,
                                      "product_productName": "Moose Tshirt",
                                      "product_productImage": "moose.jpg",
                                      "product_price": 990.00
                                    }
                                  }
                                properties:
                                  message:
                                    type: string
                                    example: "Successfully view the cart"
                                  data:
                                    type: object
                                    properties:
                                      cart_item_cartId: 
                                        type: number
                                        example: 6
                                      cart_item_productId:
                                        type: number
                                        example: 1
                                      cart_item_quantity: 
                                        type: number
                                        example: 4
                                      product_productName: 
                                        type: string
                                        example: "Moose Tshirt"
                                      product_productImage:
                                        type: string
                                        example: "moose.jpg"
                                      product_price: 
                                        type: number
                                        example: 1000.00
            '500':
              description: "Shows the Internal server error message when there is an error in server side"

  /cart/remove-product/{cartId}/{productId}:
    delete:
      summary: delete a cart item from cart for given cartId and productId
      description: User can remove a product which he no need for given cartId and the productId
      parameters:
              - name: cartId
                in: path
                required: true
                schema: 
                  type: number
              - name: productId
                in: path
                required: true
                schema:
                  type: number

      responses:
            '200':
              description: A JSON object of message and data object with cart_item_cartId, cart_item_productId, cart_item_quantity, product_productName, product_productImage, product_price.
              content:
                        application/json:
                            schema: 
                                type: object
                                example: 
                                  {
                                    "message": "Successfully Removed",
                                    "data": "Cart item removed successfully."
                                  }
                                properties:
                                      message:
                                        type: string
                                        example: "Successfully Removed"
                                      data:
                                        type: string
                                        example: "Cart item removed successfully."
            '500':
              description: "Shows the Internal server error message when there is an error in server side"
                              






